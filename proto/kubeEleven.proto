syntax = "proto3";
package claudie;

import "spec/manifest.proto";

option go_package = "proto/pb";

message BuildClusterRequest {
  spec.K8scluster desired = 1;
  spec.ProxyEnvs proxyEnvs = 3;
  string projectName = 4;
  // Endpoint specifies if the endpoint
  // is on a loadbalancer. If empty the
  // endpoint is one of the nodes supplied
  // in part of the desired state.
  string loadBalancerEndpoint = 5;
}

message BuildClusterResponse {
  spec.K8scluster desired = 1;
}

message DestroyClusterRequest {
  string projectName = 1;

  spec.K8scluster current = 2;
  // Endpoint specifies if the endpoint
  // is on a loadbalancer. If empty the
  // endpoint is one of the nodes supplied
  // in part of the desired state.
  string loadBalancerEndpoint = 3;

}

message DestroyClusterResponse {
  spec.K8scluster current = 1;
}

service KubeElevenService {
  // BuildCluster builds the kubernetes clusters specified in the provided config.
  rpc BuildCluster(BuildClusterRequest) returns (BuildClusterResponse);
  // DestroyCluster destroys the kubernetes clusters specified in the provided config.
  rpc DestroyCluster(DestroyClusterRequest) returns (DestroyClusterResponse);
}
