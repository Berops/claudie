syntax = "proto3";
package platform;
option go_package = "proto/pb";

message Config {
  string id = 1;
  string name = 2;
  string manifest = 3;
  Project desiredState = 4;
  Project currentState = 5;
  bytes msChecksum = 6;
  bytes dsChecksum = 7;
  bytes csChecksum = 8;
  int32 builderTTL = 9;
  int32 schedulerTTL = 10;
  string errorMessage = 11;
}

message Project {
  string name = 1;
  repeated Cluster clusters = 2;
  LoadBalancer loadbalancer = 3;
}

message Cluster {
  string name = 1;
  string kubernetes = 2;
  string network = 3;
  string kubeconfig = 4;
  string public_key = 5;
  string private_key = 6;
  string hash = 7;
  repeated NodePool nodePools = 9;
}

message LoadBalancer {
  repeated Role roles = 1;
  repeated LoadBalancerCluster lbClusters = 2;
}

message Role {
  string name = 1;
  Conf conf = 2;
}

message Conf {
  string protocol = 1;
  int32 port = 2;
  int32 targetPort = 3;
}

message LoadBalancerCluster {
  string name = 1;
  string role = 2;
  DNS dns = 3;
  Target target = 4;
  repeated NodePool nodePools = 5;
}

message Target {
  string name = 1;  //kubernetes cluster name
  string type = 2;  
}

message DNS {
  string hostname = 1;
  repeated string providers = 2;
}

message NodePool {
  string name = 1;
  string region = 2;
  string serverType = 3;
  string image = 4;
  uint32 diskSize = 5;
  string zone = 6;
  uint32 count = 9;
  repeated Node nodes = 10;
  Provider provider = 11 ;
  bool isControl = 12;
}

/*
 * isControl flag
 * 0 - Only worker node
 * 1 - Only master node
 * 2 - APIEndpoint master node (must be singleton)
 */

message Node {
  string name = 9;
  string private = 10;
  string public = 11;
  uint32 isControl = 12;
}

message Provider {
  string name = 1;
  string credentials = 2;
}
