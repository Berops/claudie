syntax = "proto3";
package claudie;
option go_package = "proto/pb";

message Config {
  string id = 1;
  string name = 2;
  string manifest = 3;
  Project desiredState = 4;
  Project currentState = 5;
  bytes msChecksum = 6;
  bytes dsChecksum = 7;
  bytes csChecksum = 8;
  int32 builderTTL = 9;
  int32 schedulerTTL = 10;
  // Per-cluster workflow state.
  map<string, Workflow> state = 11;
}

message Workflow {
  enum Stage {
    // NONE indicates that no stage is currently executing.
    NONE = 0;
    // TERRAFORMER indicates that the cluster is currently being build in terraformer.
    TERRAFORMER = 1;
    // ANSIBLER indicates that the cluster is currently being build in ansibler.
    ANSIBLER = 2;
    // KUBE_ELEVEN indicates that the cluster is currently being build in kube eleven.
    KUBE_ELEVEN = 3;
    // KUBER indicates that the cluster is currently being build in kuber.
    KUBER = 4;
    // SCHEDULER indicates that the config is being processed by the scheduler.
    SCHEDULER = 5;
    // DESTROY_TERRAFORMER indicates that infra for a cluster is being deleted.
    DESTROY_TERRAFORMER = 7;
    // DESTROY_KUBER indicates that data for a cluster is being deleted.
    DESTROY_KUBER = 8;
    // DELETE_NODES indicates the nodes are being deleted for the cluster.
    DELETE_NODES = 9;
  }

  enum Status {
    // DONE indicates that the workflow has finished.
    DONE = 0;
    // ERROR indicates that an error occurred while building the cluster.
    ERROR = 1;
    // IN_PROGRESS indicates that the cluster is currently being build.
    IN_PROGRESS = 2;
  }

  Stage stage = 1;
  Status status = 2;
  // additional information describing the state and status.
  string description = 3;
}

message Project {
  string name = 1;
  repeated K8scluster clusters = 2;
  repeated LBcluster loadBalancerClusters = 3;
}

message K8scluster {
  ClusterInfo clusterInfo = 1;
  string network = 2;
  string kubeconfig = 3;
  string kubernetes = 4;
}

message LBcluster {
  ClusterInfo clusterInfo = 1;
  repeated Role roles = 2;
  DNS dns = 3;
  string targetedK8s = 4;
}

message ClusterInfo {
  string name = 1;
  string hash = 2;
  string publicKey = 3;
  string privateKey = 4;
  repeated NodePool nodePools = 5;
}

message Role {
  string name = 1;
  string protocol = 2;
  int32 port = 3;
  int32 targetPort = 4;
  Target target = 5;
  RoleType roleType = 6;
}

enum RoleType {
  ApiServer = 0;
  Ingress = 1;
}

enum Target {
  k8sAllNodes = 0;
  k8sControlPlane = 1;
  k8sComputePlane = 2;
}

message DNS {
  string dnsZone = 1;
  string hostname = 2;
  Provider provider = 3;
  string endpoint = 4;
}

message NodePool {
  string name = 1;
  string region = 2;
  string serverType = 3;
  string image = 4;
  uint32 storageDiskSize = 5;
  string zone = 6;
  int32 count = 7;
  repeated Node nodes = 8;
  Provider provider = 9;
  bool isControl = 10;
  map<string, MetaValue> metadata = 11;
  AutoscalerConf autoscalerConfig = 12;
}

message AutoscalerConf {
  int32 min = 1;
  int32 max = 2;
}

message MetaValue {
  oneof MetaValueOneOf {
    string cidr = 1;
  }
}

enum NodeType {
  worker = 0;
  master = 1;
  apiEndpoint = 2;
}

message Node {
  string name = 1;
  string private = 2;
  string public = 3;
  NodeType nodeType = 4;
}

message Provider {
  //general
  string specName = 1;
  string cloudProviderName = 2;
  //credentilas is used as a variable for secret info i.e. private key, api token, secret etc
  string credentials = 3;
  //gcp
  string gcpProject = 4;
  //oci
  string ociUserOcid = 5;
  string ociTenancyOcid = 6;
  string ociFingerprint = 7;
  string ociCompartmentOcid = 8;
  //aws
  string awsAccessKey = 9; 
  //azure
  string azureSubscriptionId = 10;
  string azureTenantId = 11;
  string azureClientId = 12;
}

enum ClusterType {
  K8s = 0;
  LB = 1;
}
