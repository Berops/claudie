syntax = "proto3";
package platform;
option go_package = "proto/pb";

message Config {
  string id = 1;
  string name = 2;
  string manifest = 3;
  Project desiredState = 4;
  Project currentState = 5;
  bytes msChecksum = 6;
  bytes dsChecksum = 7;
  bytes csChecksum = 8;
  int32 builderTTL = 9;
  int32 schedulerTTL = 10;
  string errorMessage = 11;
}

message Project {
  string name = 1;
  repeated K8scluster clusters = 2;
  repeated LBcluster loadBalancerClusters = 3;
}

message K8scluster {
  ClusterInfo clusterInfo = 1;
  string network = 2;
  string kubeconfig = 3;
  string kubernetes = 4;
}

message LBcluster {
  ClusterInfo clusterInfo = 1;
  repeated Role roles = 2;
  DNS dns = 3;
  string targetedK8s = 4;
}

message ClusterInfo {
  string name = 1;
  string hash = 2;
  string public_key = 3;
  string private_key = 4;
  repeated NodePool nodePools = 5;
}

message Role {
  string name = 1;
  string protocol = 2;
  int32 port = 3;
  int32 targetPort = 4;  
  Target target = 5;  
  RoleType roleType = 6;
}

enum RoleType {
  ApiServer = 0;
  Ingress = 1;
}

enum Target {
  k8sAllNodes = 0;
  k8sControlPlane = 1;
  k8sComputePlane = 2;
}

message DNS {
  string dnsZone = 1;
  string hostname = 2;
  Provider provider = 3;
  string project = 4;
  string endpoint = 5;
}

message NodePool {
  string name = 1;
  string region = 2;
  string serverType = 3;
  string image = 4;
  uint32 diskSize = 5;
  string zone = 6;
  uint32 count = 9;
  repeated Node nodes = 10;
  Provider provider = 11 ;
  bool isControl = 12;
}

enum NodeType {
  worker = 0;
  master = 1;
  apiEndpoint = 2;
}

message Node {
  string name = 1;
  string private = 2;
  string public = 3;
  NodeType nodeType = 4;
}

message Provider {
  string name = 1;
  string credentials = 2;
}

enum ClusterType {
  K8s = 0;
  LB = 1;
}
