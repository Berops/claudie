// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.5
// source: proto/kubeEleven.proto

package pb

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// KubeElevenServiceClient is the client API for KubeElevenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KubeElevenServiceClient interface {
	BuildCluster(ctx context.Context, in *BuildClusterRequest, opts ...grpc.CallOption) (*BuildClusterResponse, error)
}

type kubeElevenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKubeElevenServiceClient(cc grpc.ClientConnInterface) KubeElevenServiceClient {
	return &kubeElevenServiceClient{cc}
}

func (c *kubeElevenServiceClient) BuildCluster(ctx context.Context, in *BuildClusterRequest, opts ...grpc.CallOption) (*BuildClusterResponse, error) {
	out := new(BuildClusterResponse)
	err := c.cc.Invoke(ctx, "/platform.KubeElevenService/BuildCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KubeElevenServiceServer is the server API for KubeElevenService service.
// All implementations must embed UnimplementedKubeElevenServiceServer
// for forward compatibility
type KubeElevenServiceServer interface {
	BuildCluster(context.Context, *BuildClusterRequest) (*BuildClusterResponse, error)
	mustEmbedUnimplementedKubeElevenServiceServer()
}

// UnimplementedKubeElevenServiceServer must be embedded to have forward compatible implementations.
type UnimplementedKubeElevenServiceServer struct {
}

func (UnimplementedKubeElevenServiceServer) BuildCluster(context.Context, *BuildClusterRequest) (*BuildClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildCluster not implemented")
}
func (UnimplementedKubeElevenServiceServer) mustEmbedUnimplementedKubeElevenServiceServer() {}

// UnsafeKubeElevenServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KubeElevenServiceServer will
// result in compilation errors.
type UnsafeKubeElevenServiceServer interface {
	mustEmbedUnimplementedKubeElevenServiceServer()
}

func RegisterKubeElevenServiceServer(s grpc.ServiceRegistrar, srv KubeElevenServiceServer) {
	s.RegisterService(&KubeElevenService_ServiceDesc, srv)
}

func _KubeElevenService_BuildCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KubeElevenServiceServer).BuildCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/platform.KubeElevenService/BuildCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KubeElevenServiceServer).BuildCluster(ctx, req.(*BuildClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// KubeElevenService_ServiceDesc is the grpc.ServiceDesc for KubeElevenService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var KubeElevenService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "platform.KubeElevenService",
	HandlerType: (*KubeElevenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildCluster",
			Handler:    _KubeElevenService_BuildCluster_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/kubeEleven.proto",
}
