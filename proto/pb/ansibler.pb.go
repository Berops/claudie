// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: ansibler.proto

package pb

import (
	spec "github.com/berops/claudie/proto/pb/spec"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desired     *spec.K8Scluster  `protobuf:"bytes,1,opt,name=desired,proto3" json:"desired,omitempty"`
	DesiredLbs  []*spec.LBcluster `protobuf:"bytes,2,rep,name=desiredLbs,proto3" json:"desiredLbs,omitempty"`
	ProjectName string            `protobuf:"bytes,3,opt,name=projectName,proto3" json:"projectName,omitempty"`
}

func (x *InstallRequest) Reset() {
	*x = InstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRequest) ProtoMessage() {}

func (x *InstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRequest.ProtoReflect.Descriptor instead.
func (*InstallRequest) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{0}
}

func (x *InstallRequest) GetDesired() *spec.K8Scluster {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *InstallRequest) GetDesiredLbs() []*spec.LBcluster {
	if x != nil {
		return x.DesiredLbs
	}
	return nil
}

func (x *InstallRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type InstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desired    *spec.K8Scluster  `protobuf:"bytes,1,opt,name=desired,proto3" json:"desired,omitempty"`
	DesiredLbs []*spec.LBcluster `protobuf:"bytes,2,rep,name=desiredLbs,proto3" json:"desiredLbs,omitempty"`
}

func (x *InstallResponse) Reset() {
	*x = InstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallResponse) ProtoMessage() {}

func (x *InstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallResponse.ProtoReflect.Descriptor instead.
func (*InstallResponse) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{1}
}

func (x *InstallResponse) GetDesired() *spec.K8Scluster {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *InstallResponse) GetDesiredLbs() []*spec.LBcluster {
	if x != nil {
		return x.DesiredLbs
	}
	return nil
}

type SetUpLBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desired             *spec.K8Scluster  `protobuf:"bytes,1,opt,name=desired,proto3" json:"desired,omitempty"`
	CurrentLbs          []*spec.LBcluster `protobuf:"bytes,2,rep,name=currentLbs,proto3" json:"currentLbs,omitempty"`
	DesiredLbs          []*spec.LBcluster `protobuf:"bytes,3,rep,name=desiredLbs,proto3" json:"desiredLbs,omitempty"`
	PreviousAPIEndpoint string            `protobuf:"bytes,4,opt,name=previousAPIEndpoint,proto3" json:"previousAPIEndpoint,omitempty"`
	ProjectName         string            `protobuf:"bytes,5,opt,name=projectName,proto3" json:"projectName,omitempty"`
	FirstRun            bool              `protobuf:"varint,6,opt,name=firstRun,proto3" json:"firstRun,omitempty"`
}

func (x *SetUpLBRequest) Reset() {
	*x = SetUpLBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpLBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpLBRequest) ProtoMessage() {}

func (x *SetUpLBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpLBRequest.ProtoReflect.Descriptor instead.
func (*SetUpLBRequest) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{2}
}

func (x *SetUpLBRequest) GetDesired() *spec.K8Scluster {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *SetUpLBRequest) GetCurrentLbs() []*spec.LBcluster {
	if x != nil {
		return x.CurrentLbs
	}
	return nil
}

func (x *SetUpLBRequest) GetDesiredLbs() []*spec.LBcluster {
	if x != nil {
		return x.DesiredLbs
	}
	return nil
}

func (x *SetUpLBRequest) GetPreviousAPIEndpoint() string {
	if x != nil {
		return x.PreviousAPIEndpoint
	}
	return ""
}

func (x *SetUpLBRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *SetUpLBRequest) GetFirstRun() bool {
	if x != nil {
		return x.FirstRun
	}
	return false
}

type SetUpLBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desired    *spec.K8Scluster  `protobuf:"bytes,1,opt,name=desired,proto3" json:"desired,omitempty"`
	CurrentLbs []*spec.LBcluster `protobuf:"bytes,2,rep,name=currentLbs,proto3" json:"currentLbs,omitempty"`
	DesiredLbs []*spec.LBcluster `protobuf:"bytes,3,rep,name=desiredLbs,proto3" json:"desiredLbs,omitempty"`
}

func (x *SetUpLBResponse) Reset() {
	*x = SetUpLBResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUpLBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUpLBResponse) ProtoMessage() {}

func (x *SetUpLBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUpLBResponse.ProtoReflect.Descriptor instead.
func (*SetUpLBResponse) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{3}
}

func (x *SetUpLBResponse) GetDesired() *spec.K8Scluster {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *SetUpLBResponse) GetCurrentLbs() []*spec.LBcluster {
	if x != nil {
		return x.CurrentLbs
	}
	return nil
}

func (x *SetUpLBResponse) GetDesiredLbs() []*spec.LBcluster {
	if x != nil {
		return x.DesiredLbs
	}
	return nil
}

type TeardownLBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desired    *spec.K8Scluster  `protobuf:"bytes,1,opt,name=desired,proto3" json:"desired,omitempty"`
	DesiredLbs []*spec.LBcluster `protobuf:"bytes,2,rep,name=desiredLbs,proto3" json:"desiredLbs,omitempty"`
	// LB clusters which were deleted from the Claudie manifest.
	DeletedLbs  []*spec.LBcluster `protobuf:"bytes,3,rep,name=deletedLbs,proto3" json:"deletedLbs,omitempty"`
	ProjectName string            `protobuf:"bytes,4,opt,name=projectName,proto3" json:"projectName,omitempty"`
}

func (x *TeardownLBRequest) Reset() {
	*x = TeardownLBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeardownLBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeardownLBRequest) ProtoMessage() {}

func (x *TeardownLBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeardownLBRequest.ProtoReflect.Descriptor instead.
func (*TeardownLBRequest) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{4}
}

func (x *TeardownLBRequest) GetDesired() *spec.K8Scluster {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *TeardownLBRequest) GetDesiredLbs() []*spec.LBcluster {
	if x != nil {
		return x.DesiredLbs
	}
	return nil
}

func (x *TeardownLBRequest) GetDeletedLbs() []*spec.LBcluster {
	if x != nil {
		return x.DeletedLbs
	}
	return nil
}

func (x *TeardownLBRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type TeardownLBResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousAPIEndpoint string            `protobuf:"bytes,1,opt,name=previousAPIEndpoint,proto3" json:"previousAPIEndpoint,omitempty"`
	Desired             *spec.K8Scluster  `protobuf:"bytes,2,opt,name=desired,proto3" json:"desired,omitempty"`
	DesiredLbs          []*spec.LBcluster `protobuf:"bytes,3,rep,name=desiredLbs,proto3" json:"desiredLbs,omitempty"`
	DeletedLbs          []*spec.LBcluster `protobuf:"bytes,4,rep,name=deletedLbs,proto3" json:"deletedLbs,omitempty"`
}

func (x *TeardownLBResponse) Reset() {
	*x = TeardownLBResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeardownLBResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeardownLBResponse) ProtoMessage() {}

func (x *TeardownLBResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeardownLBResponse.ProtoReflect.Descriptor instead.
func (*TeardownLBResponse) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{5}
}

func (x *TeardownLBResponse) GetPreviousAPIEndpoint() string {
	if x != nil {
		return x.PreviousAPIEndpoint
	}
	return ""
}

func (x *TeardownLBResponse) GetDesired() *spec.K8Scluster {
	if x != nil {
		return x.Desired
	}
	return nil
}

func (x *TeardownLBResponse) GetDesiredLbs() []*spec.LBcluster {
	if x != nil {
		return x.DesiredLbs
	}
	return nil
}

func (x *TeardownLBResponse) GetDeletedLbs() []*spec.LBcluster {
	if x != nil {
		return x.DeletedLbs
	}
	return nil
}

type UpdateAPIEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current     *spec.K8Scluster `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	ApiNodePool string           `protobuf:"bytes,2,opt,name=apiNodePool,proto3" json:"apiNodePool,omitempty"`
	ProjectName string           `protobuf:"bytes,4,opt,name=projectName,proto3" json:"projectName,omitempty"`
}

func (x *UpdateAPIEndpointRequest) Reset() {
	*x = UpdateAPIEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPIEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPIEndpointRequest) ProtoMessage() {}

func (x *UpdateAPIEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPIEndpointRequest.ProtoReflect.Descriptor instead.
func (*UpdateAPIEndpointRequest) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateAPIEndpointRequest) GetCurrent() *spec.K8Scluster {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *UpdateAPIEndpointRequest) GetApiNodePool() string {
	if x != nil {
		return x.ApiNodePool
	}
	return ""
}

func (x *UpdateAPIEndpointRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type UpdateAPIEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *spec.K8Scluster `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *UpdateAPIEndpointResponse) Reset() {
	*x = UpdateAPIEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPIEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPIEndpointResponse) ProtoMessage() {}

func (x *UpdateAPIEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPIEndpointResponse.ProtoReflect.Descriptor instead.
func (*UpdateAPIEndpointResponse) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAPIEndpointResponse) GetCurrent() *spec.K8Scluster {
	if x != nil {
		return x.Current
	}
	return nil
}

type RemoveClaudieUtilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current     *spec.K8Scluster  `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	CurrentLbs  []*spec.LBcluster `protobuf:"bytes,2,rep,name=currentLbs,proto3" json:"currentLbs,omitempty"`
	ProjectName string            `protobuf:"bytes,3,opt,name=projectName,proto3" json:"projectName,omitempty"`
}

func (x *RemoveClaudieUtilitiesRequest) Reset() {
	*x = RemoveClaudieUtilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClaudieUtilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClaudieUtilitiesRequest) ProtoMessage() {}

func (x *RemoveClaudieUtilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClaudieUtilitiesRequest.ProtoReflect.Descriptor instead.
func (*RemoveClaudieUtilitiesRequest) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveClaudieUtilitiesRequest) GetCurrent() *spec.K8Scluster {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *RemoveClaudieUtilitiesRequest) GetCurrentLbs() []*spec.LBcluster {
	if x != nil {
		return x.CurrentLbs
	}
	return nil
}

func (x *RemoveClaudieUtilitiesRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type RemoveClaudieUtilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current    *spec.K8Scluster  `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	CurrentLbs []*spec.LBcluster `protobuf:"bytes,2,rep,name=currentLbs,proto3" json:"currentLbs,omitempty"`
}

func (x *RemoveClaudieUtilitiesResponse) Reset() {
	*x = RemoveClaudieUtilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ansibler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveClaudieUtilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveClaudieUtilitiesResponse) ProtoMessage() {}

func (x *RemoveClaudieUtilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ansibler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveClaudieUtilitiesResponse.ProtoReflect.Descriptor instead.
func (*RemoveClaudieUtilitiesResponse) Descriptor() ([]byte, []int) {
	return file_ansibler_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveClaudieUtilitiesResponse) GetCurrent() *spec.K8Scluster {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *RemoveClaudieUtilitiesResponse) GetCurrentLbs() []*spec.LBcluster {
	if x != nil {
		return x.CurrentLbs
	}
	return nil
}

var File_ansibler_proto protoreflect.FileDescriptor

var file_ansibler_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x1a, 0x13, 0x73, 0x70, 0x65, 0x63, 0x2f,
	0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f,
	0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2f, 0x0a,
	0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x6e, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x2f, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73,
	0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x42, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x2f, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x62, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x62, 0x73,
	0x12, 0x2f, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x50, 0x49,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x75,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x69, 0x72, 0x73, 0x74, 0x52, 0x75,
	0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x42, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4b, 0x38,
	0x73, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x62, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c,
	0x62, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x4c, 0x62, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e,
	0x4c, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x64, 0x65,
	0x73, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x4c, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x4c, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x12, 0x54, 0x65,
	0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x4c, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x50, 0x49, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2f,
	0x0a, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x12,
	0x2f, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x62, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x62, 0x73,
	0x22, 0x8a, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x69,
	0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x70, 0x69, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a,
	0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70,
	0x65, 0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x4b, 0x38, 0x73, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c,
	0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63, 0x2e,
	0x4c, 0x42, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4c, 0x62, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x65,
	0x63, 0x2e, 0x4b, 0x38, 0x73, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4c, 0x62, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x65, 0x63,
	0x2e, 0x4c, 0x42, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4c, 0x62, 0x73, 0x32, 0x82, 0x04, 0x0a, 0x0f, 0x41, 0x6e, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x17, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x56, 0x50, 0x4e, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x55, 0x70, 0x4c, 0x6f, 0x61, 0x64, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x73, 0x12,
	0x17, 0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c,
	0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x70, 0x4c, 0x42, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x15, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x4c, 0x6f,
	0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x6c,
	0x61, 0x75, 0x64, 0x69, 0x65, 0x2e, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x4c, 0x42,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x2e, 0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x4c, 0x42, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50,
	0x49, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63,
	0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x69, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x69, 0x65, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ansibler_proto_rawDescOnce sync.Once
	file_ansibler_proto_rawDescData = file_ansibler_proto_rawDesc
)

func file_ansibler_proto_rawDescGZIP() []byte {
	file_ansibler_proto_rawDescOnce.Do(func() {
		file_ansibler_proto_rawDescData = protoimpl.X.CompressGZIP(file_ansibler_proto_rawDescData)
	})
	return file_ansibler_proto_rawDescData
}

var file_ansibler_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ansibler_proto_goTypes = []interface{}{
	(*InstallRequest)(nil),                 // 0: claudie.InstallRequest
	(*InstallResponse)(nil),                // 1: claudie.InstallResponse
	(*SetUpLBRequest)(nil),                 // 2: claudie.SetUpLBRequest
	(*SetUpLBResponse)(nil),                // 3: claudie.SetUpLBResponse
	(*TeardownLBRequest)(nil),              // 4: claudie.TeardownLBRequest
	(*TeardownLBResponse)(nil),             // 5: claudie.TeardownLBResponse
	(*UpdateAPIEndpointRequest)(nil),       // 6: claudie.UpdateAPIEndpointRequest
	(*UpdateAPIEndpointResponse)(nil),      // 7: claudie.UpdateAPIEndpointResponse
	(*RemoveClaudieUtilitiesRequest)(nil),  // 8: claudie.RemoveClaudieUtilitiesRequest
	(*RemoveClaudieUtilitiesResponse)(nil), // 9: claudie.RemoveClaudieUtilitiesResponse
	(*spec.K8Scluster)(nil),                // 10: spec.K8scluster
	(*spec.LBcluster)(nil),                 // 11: spec.LBcluster
}
var file_ansibler_proto_depIdxs = []int32{
	10, // 0: claudie.InstallRequest.desired:type_name -> spec.K8scluster
	11, // 1: claudie.InstallRequest.desiredLbs:type_name -> spec.LBcluster
	10, // 2: claudie.InstallResponse.desired:type_name -> spec.K8scluster
	11, // 3: claudie.InstallResponse.desiredLbs:type_name -> spec.LBcluster
	10, // 4: claudie.SetUpLBRequest.desired:type_name -> spec.K8scluster
	11, // 5: claudie.SetUpLBRequest.currentLbs:type_name -> spec.LBcluster
	11, // 6: claudie.SetUpLBRequest.desiredLbs:type_name -> spec.LBcluster
	10, // 7: claudie.SetUpLBResponse.desired:type_name -> spec.K8scluster
	11, // 8: claudie.SetUpLBResponse.currentLbs:type_name -> spec.LBcluster
	11, // 9: claudie.SetUpLBResponse.desiredLbs:type_name -> spec.LBcluster
	10, // 10: claudie.TeardownLBRequest.desired:type_name -> spec.K8scluster
	11, // 11: claudie.TeardownLBRequest.desiredLbs:type_name -> spec.LBcluster
	11, // 12: claudie.TeardownLBRequest.deletedLbs:type_name -> spec.LBcluster
	10, // 13: claudie.TeardownLBResponse.desired:type_name -> spec.K8scluster
	11, // 14: claudie.TeardownLBResponse.desiredLbs:type_name -> spec.LBcluster
	11, // 15: claudie.TeardownLBResponse.deletedLbs:type_name -> spec.LBcluster
	10, // 16: claudie.UpdateAPIEndpointRequest.current:type_name -> spec.K8scluster
	10, // 17: claudie.UpdateAPIEndpointResponse.current:type_name -> spec.K8scluster
	10, // 18: claudie.RemoveClaudieUtilitiesRequest.current:type_name -> spec.K8scluster
	11, // 19: claudie.RemoveClaudieUtilitiesRequest.currentLbs:type_name -> spec.LBcluster
	10, // 20: claudie.RemoveClaudieUtilitiesResponse.current:type_name -> spec.K8scluster
	11, // 21: claudie.RemoveClaudieUtilitiesResponse.currentLbs:type_name -> spec.LBcluster
	0,  // 22: claudie.AnsiblerService.InstallNodeRequirements:input_type -> claudie.InstallRequest
	0,  // 23: claudie.AnsiblerService.InstallVPN:input_type -> claudie.InstallRequest
	2,  // 24: claudie.AnsiblerService.SetUpLoadbalancers:input_type -> claudie.SetUpLBRequest
	4,  // 25: claudie.AnsiblerService.TeardownLoadBalancers:input_type -> claudie.TeardownLBRequest
	6,  // 26: claudie.AnsiblerService.UpdateAPIEndpoint:input_type -> claudie.UpdateAPIEndpointRequest
	8,  // 27: claudie.AnsiblerService.RemoveClaudieUtilities:input_type -> claudie.RemoveClaudieUtilitiesRequest
	1,  // 28: claudie.AnsiblerService.InstallNodeRequirements:output_type -> claudie.InstallResponse
	1,  // 29: claudie.AnsiblerService.InstallVPN:output_type -> claudie.InstallResponse
	3,  // 30: claudie.AnsiblerService.SetUpLoadbalancers:output_type -> claudie.SetUpLBResponse
	5,  // 31: claudie.AnsiblerService.TeardownLoadBalancers:output_type -> claudie.TeardownLBResponse
	7,  // 32: claudie.AnsiblerService.UpdateAPIEndpoint:output_type -> claudie.UpdateAPIEndpointResponse
	9,  // 33: claudie.AnsiblerService.RemoveClaudieUtilities:output_type -> claudie.RemoveClaudieUtilitiesResponse
	28, // [28:34] is the sub-list for method output_type
	22, // [22:28] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_ansibler_proto_init() }
func file_ansibler_proto_init() {
	if File_ansibler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ansibler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpLBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUpLBResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeardownLBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeardownLBResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPIEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPIEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClaudieUtilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ansibler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveClaudieUtilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ansibler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ansibler_proto_goTypes,
		DependencyIndexes: file_ansibler_proto_depIdxs,
		MessageInfos:      file_ansibler_proto_msgTypes,
	}.Build()
	File_ansibler_proto = out.File
	file_ansibler_proto_rawDesc = nil
	file_ansibler_proto_goTypes = nil
	file_ansibler_proto_depIdxs = nil
}
