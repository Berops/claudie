// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WireguardianServiceClient is the client API for WireguardianService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WireguardianServiceClient interface {
	BuildVPN(ctx context.Context, in *BuildVPNRequest, opts ...grpc.CallOption) (*BuildVPNResponse, error)
}

type wireguardianServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWireguardianServiceClient(cc grpc.ClientConnInterface) WireguardianServiceClient {
	return &wireguardianServiceClient{cc}
}

func (c *wireguardianServiceClient) BuildVPN(ctx context.Context, in *BuildVPNRequest, opts ...grpc.CallOption) (*BuildVPNResponse, error) {
	out := new(BuildVPNResponse)
	err := c.cc.Invoke(ctx, "/platform.WireguardianService/BuildVPN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WireguardianServiceServer is the server API for WireguardianService service.
// All implementations must embed UnimplementedWireguardianServiceServer
// for forward compatibility
type WireguardianServiceServer interface {
	BuildVPN(context.Context, *BuildVPNRequest) (*BuildVPNResponse, error)
	mustEmbedUnimplementedWireguardianServiceServer()
}

// UnimplementedWireguardianServiceServer must be embedded to have forward compatible implementations.
type UnimplementedWireguardianServiceServer struct {
}

func (UnimplementedWireguardianServiceServer) BuildVPN(context.Context, *BuildVPNRequest) (*BuildVPNResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildVPN not implemented")
}
func (UnimplementedWireguardianServiceServer) mustEmbedUnimplementedWireguardianServiceServer() {}

// UnsafeWireguardianServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WireguardianServiceServer will
// result in compilation errors.
type UnsafeWireguardianServiceServer interface {
	mustEmbedUnimplementedWireguardianServiceServer()
}

func RegisterWireguardianServiceServer(s grpc.ServiceRegistrar, srv WireguardianServiceServer) {
	s.RegisterService(&WireguardianService_ServiceDesc, srv)
}

func _WireguardianService_BuildVPN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildVPNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WireguardianServiceServer).BuildVPN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/platform.WireguardianService/BuildVPN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WireguardianServiceServer).BuildVPN(ctx, req.(*BuildVPNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// WireguardianService_ServiceDesc is the grpc.ServiceDesc for WireguardianService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WireguardianService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "platform.WireguardianService",
	HandlerType: (*WireguardianServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildVPN",
			Handler:    _WireguardianService_BuildVPN_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/wireguardian.proto",
}
