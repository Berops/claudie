apiVersion: apps/v1
kind: Deployment
metadata:
  name: terraformer
  labels:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: terraformer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: claudie
      app.kubernetes.io/name: terraformer
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: claudie
        app.kubernetes.io/name: terraformer
    spec:
      terminationGracePeriodSeconds: 1320
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000            
      volumes:
        - name: data
          emptyDir: {}
      containers:
        - name: terraformer
          imagePullPolicy: Always
          image: ghcr.io/berops/claudie/terraformer
          volumeMounts:
          - mountPath: /bin/services/terraformer/server/clusters
            name: data
          securityContext:
            capabilities:
              drop:
                - all
              add:
                - chown
                - dac_override
                - fowner
                - fsetid
                - kill
                - setgid
                - setuid
                - setpcap
                - net_bind_service
                - net_raw
                - sys_chroot
                - mknod
                - audit_write
                - setfcap            
          resources:
            requests:
              cpu: 700m
              memory: 1200Mi
            limits:
              cpu: 1024m
              memory: 1700Mi
          env:
            - name: TERRAFORMER_PORT
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: TERRAFORMER_PORT
              # No hostname needed
            - name: GOLANG_LOG
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: GOLANG_LOG
            # MinIO envs
            - name: MINIO_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: MINIO_HOSTNAME
            - name: MINIO_PORT
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: MINIO_PORT
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_ROOT_PASSWORD
            # DynamoDB envs
            - name: DYNAMO_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: DYNAMO_HOSTNAME
            - name: DYNAMO_PORT
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: DYNAMO_PORT
            - name: DYNAMO_TABLE_NAME
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: DYNAMO_TABLE_NAME
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: dynamo-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: dynamo-secret
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: env
                  key: AWS_REGION         
          ports:
            - containerPort: 50052
          readinessProbe:
            grpc:
              port: 50052
              service: terraformer-readiness
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            grpc:
              port: 50052
              service: terraformer-liveness
            initialDelaySeconds: 5
            periodSeconds: 30
---
kind: Service
apiVersion: v1
metadata:
  name: terraformer
  labels:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: terraformer
spec:
  selector:
    app.kubernetes.io/part-of: claudie
    app.kubernetes.io/name: terraformer
  ports:
    - protocol: TCP
      port: 50052
      targetPort: 50052
