---
- name: Create wireguard config dir
  ansible.builtin.file:
    path: "/etc/wireguard"
    state: directory
  register: wg_conf_dir

- name: Generate wireguard keypair
  ansible.builtin.shell: umask 077 && wg genkey | tee {{ wg_conf_dir.path }}/privatekey | wg pubkey > {{ wg_conf_dir.path }}/publickey

- name: Save privatekey
  ansible.builtin.shell: cat {{ wg_conf_dir.path }}/privatekey
  register: privatekey

- name: Save publickey
  ansible.builtin.shell: cat {{ wg_conf_dir.path }}/publickey
  register: publickey

- name: Check if wireguard interface exists
  ansible.builtin.shell: ip a
  register: ipa_contents

- name: Create wireguard interface
  ansible.builtin.shell: ip link add dev wg0 type wireguard
  when: ipa_contents.stdout.find('wg0') == -1

- name: Check if wireguard interface has IP address
  ansible.builtin.shell: ip a
  register: ipa_contents

- name: Configure an IP address for an interface
  ansible.builtin.shell: "ip address add dev wg0 {{ private_ip }}/24"
  when: "ipa_contents.stdout.find( private_ip ) == -1"

- name: Template wireguard config file to a node
  ansible.builtin.template:
    src: wg.conf.j2
    dest: "{{ wg_conf_dir.path }}/wg0.conf"

- name: Sync configuration file
  ansible.builtin.shell: wg syncconf {{ wg_interface_name }} <(wg-quick strip {{ wg_interface_name }})
  args:
    executable: /bin/bash

- name: Enable wireguard interface
  ansible.builtin.shell: ip link set up dev wg0

- name: Set MTU size for wg0
  ansible.builtin.shell: ifconfig {{ wg_interface_name }} mtu {{ mtu_size }}

- name: Make MTU change persistent across reboots
  ansible.builtin.blockinfile:
    path: /etc/dhcp/dhclient.conf
    insertbefore: "request"
    block: |
      interface "{{ wg_interface_name }}" {
         default interface-mtu {{ mtu_size }};
         supersede interface-mtu {{ mtu_size }};
      }

- name: Enable systemd service for wg-quick@wg0
  ansible.builtin.systemd:
    name: "wg-quick@wg0"
    enabled: true
...
