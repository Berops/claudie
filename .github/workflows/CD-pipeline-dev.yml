name: CD pipeline for platform - dev
# Controls when the action will run. 
on:
  # Run after CI
  workflow_run:
    workflows: [ "CI pipeline for platform" ]
    branches: [ main ]
    types: 
      - completed
  # Manual trigger    
  workflow_dispatch:

jobs:
# Deploy manifests to GKE cluster
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GKE_SERVICE_ACC_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SERVICE_ACC_KEY }}
      # Start the GKE cluster    
      - name: Start the GKE cluster
        run: gcloud dataproc clusters start k8s-test-cluster --region=europe-west3
      # Create a ConfigMap from .env file
      - name: Set up ConfigMap
        run: kubectl create configmap urls --from-env-file=.env -o yaml --dry-run | kubectl replace -f - 
      # Deploy services
      - name: Deploy Database
        run: kubectl apply -f ./K8s-test-cluster/mongodb.yaml
      - name: Deploy Context-box
        run: kubectl apply -f ./K8s-test-cluster/context-box.yaml
      - name: Deploy Scheduler
        run: kubectl apply -f ./K8s-test-cluster/scheduler.yaml
      - name: Deploy Builder
        run: kubectl apply -f ./K8s-test-cluster/builder.yaml
      - name: Deploy Terraformer
        run: kubectl apply -f ./K8s-test-cluster/terraformer.yaml
#     - name: Deploy Kube-eleven
#       run: kubectl apply -f ./K8s-test-cluster/kube-eleven.yaml
      - name: Deploy Wireguardian
        run: kubectl apply -f ./K8s-test-cluster/wireguardian.yaml
