name: CD pipeline for platform - dev
on:
  # Run after merge to master
  push:
    branches:
      - master
  # Manual trigger
  workflow_dispatch:

env:
  ENV_FILE: .env
  SERVICES: context-box scheduler builder terraformer wireguardian kube-eleven testing-framework

jobs:
  deploy-and-monitor:
    if: github.event.pull_request.draft == false
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: latest

      - name: install kustomize
        uses: imranismail/setup-kustomize@v1.6.1
        with:
          version: 3.6.1

      # Set output to use short sha of the merge commit HEAD
      - name: Set short sha output
        id: sha_short
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Check outputs
        run: echo ${{ steps.sha_short.outputs.sha_short }}

      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GCP_DOCKER_REGISTRY_KEY }}
          export_default_credentials: true
          cleanup_credentials: true

      - name: Configure kubectl
        uses: google-github-actions/get-gke-credentials@v0.3.0
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SERVICE_ACC_KEY }}
          use_auth_provider: true

      # Create a seperate temporary namespace
      - name: Create seperate namespace
        working-directory: ./K8s-dev-cluster
        run: kubectl create namespace claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}

      # Deploy services to new namespace
      - name: Deploy to new namespace
        working-directory: ./K8s-dev-cluster
        run: |
          kustomize edit set namespace claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}}
          kustomize build | kubectl apply -f - 

          cat kustomization.yaml

      # Check if everything is ready and running
      - name: Monitor status of the new namespace
        run: |
          arr=( ${{ env.SERVICES }} )
          unset arr[-1]
          echo "${arr[@]}"
          for SERVICE in "${arr[@]}"
          do 
          kubectl wait deployment -l app=$SERVICE --for=condition=available --timeout=900s --namespace=claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}
          done

          kubectl get pods --namespace=claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}

      - name: Start the E2E tests
        working-directory: ./K8s-dev-cluster
        run: |
          TEMP=($(gcloud container images list-tags eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/platform/testing-framework --sort-by=TIMESTAMP --format="get(tags)"))
          NEWEST_TAG=${TEMP[-1]}
          kustomize edit set namespace claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}
          kustomize edit add resource testing-framework.yaml
          kustomize edit set image eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/platform/testing-framework:$NEWEST_TAG
          kustomize build . | kubectl apply -f -

      - name: Monitor E2E test
        run: |
          kubectl wait --for=condition=complete --timeout=10800s job/testing-framework -n claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}

      - name: Dump logs from testing framework
        if: ${{ always() }}
        run: |
          gcloud logging read "resource.labels.container_name = "testing-framework" AND severity >= ERROR AND  resource.labels.namespace_name = "claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}""

      - name: Delete temporary namespace
        run: |
          kubectl delete namespace claudie-${{ steps.sha_short.outputs.sha_short }}-${GITHUB_RUN_NUMBER}
